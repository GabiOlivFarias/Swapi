{"remainingRequest":"/home/gabi/JERA/outros/Swapi/node_modules/babel-loader/lib/index.js!/home/gabi/JERA/outros/Swapi/node_modules/vuetify/lib/components/VCombobox/VCombobox.js","dependencies":[{"path":"/home/gabi/JERA/outros/Swapi/node_modules/vuetify/lib/components/VCombobox/VCombobox.js","mtime":499162500000},{"path":"/home/gabi/JERA/outros/Swapi/babel.config.js","mtime":1661951552984},{"path":"/home/gabi/JERA/outros/Swapi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/gabi/JERA/outros/Swapi/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["VSelect","VAutocomplete","keyCodes","extend","name","props","delimiters","type","Array","default","returnObject","Boolean","data","editingIndex","computed","computedCounterValue","multiple","selectedItems","length","internalSearch","toString","hasSlot","options","call","isAnyValueAllowed","menuCanShow","isFocused","hasDisplayedItems","$slots","hideNoData","searchIsDirty","methods","onInternalSearchChanged","val","delimiter","find","d","endsWith","slice","updateTags","updateMenuDimensions","genInput","input","attrs","on","paste","onPaste","genChipSelection","item","index","chip","componentOptions","listeners","dblclick","getText","selectedIndex","onChipInput","onEnterDown","e","preventDefault","getMenuIndex","$nextTick","updateSelf","onKeyDown","keyCode","ctrlKey","home","end","includes","left","$refs","selectionStart","enter","changeSelectedIndex","onTabDown","stopPropagation","selectItem","updateEditing","toLocaleLowerCase","setSelectedItems","internalValue","setValue","value","undefined","findIndex","Object","assign","splice","push","updateCombobox","isUsingSlot","$scopedSlots","selection","hasChips","menuIndex","itemToSelect","event","pastedItemText","clipboardData","_a","getData","findExistingIndex","clearableCallback"],"sourceRoot":"","sources":["../../../src/components/VCombobox/VCombobox.ts"],"sourcesContent":["// Styles\nimport '../VAutocomplete/VAutocomplete.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n\n  props: {\n    delimiters: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n    returnObject: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data: () => ({\n    editingIndex: -1,\n  }),\n\n  computed: {\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.internalSearch || '').toString().length\n    },\n    hasSlot (): boolean {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple\n    },\n    isAnyValueAllowed (): boolean {\n      return true\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems ||\n        (!!this.$slots['no-data'] && !this.hideNoData)\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null\n    },\n  },\n\n  methods: {\n    onInternalSearchChanged (val: any) {\n      if (\n        val &&\n        this.multiple &&\n        this.delimiters.length\n      ) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d))\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length)\n          this.updateTags()\n        }\n      }\n\n      this.updateMenuDimensions()\n    },\n    genInput () {\n      const input = VAutocomplete.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n      input.data!.on!.paste = this.onPaste\n\n      return input\n    },\n    genChipSelection (item: object, index: number) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index)\n\n      // Allow user to update an existing value\n      if (this.multiple) {\n        chip.componentOptions!.listeners! = {\n          ...chip.componentOptions!.listeners!,\n          dblclick: () => {\n            this.editingIndex = index\n            this.internalSearch = this.getText(item)\n            this.selectedIndex = -1\n          },\n        }\n      }\n\n      return chip\n    },\n    onChipInput (item: object) {\n      VSelect.options.methods.onChipInput.call(this, item)\n\n      this.editingIndex = -1\n    },\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown (e: Event) {\n      e.preventDefault()\n      // If has menu index, let v-select-list handle\n      if (this.getMenuIndex() > -1) return\n\n      this.$nextTick(this.updateSelf)\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // If user is at selection index of 0\n      // create a new tag\n      if (this.multiple &&\n        keyCode === keyCodes.left &&\n        this.$refs.input.selectionStart === 0\n      ) {\n        this.updateSelf()\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onTabDown (e: KeyboardEvent) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple &&\n        this.internalSearch &&\n        this.getMenuIndex() === -1\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        return this.updateTags()\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e)\n    },\n    selectItem (item: object) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing()\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item)\n\n        // if selected item contains search value,\n        // remove the search string\n        if (\n          this.internalSearch &&\n          this.multiple &&\n          this.getText(item).toLocaleLowerCase().includes(this.internalSearch.toLocaleLowerCase())\n        ) {\n          this.internalSearch = null\n        }\n      }\n    },\n    setSelectedItems () {\n      if (this.internalValue == null ||\n        this.internalValue === ''\n      ) {\n        this.selectedItems = []\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue]\n      }\n    },\n    setValue (value?: any) {\n      VSelect.options.methods.setValue.call(this, value === undefined ? this.internalSearch : value)\n    },\n    updateEditing () {\n      const value = this.internalValue.slice()\n      const index = this.selectedItems.findIndex(item =>\n        this.getText(item) === this.internalSearch)\n\n      // If user enters a duplicate text on chip edit,\n      // don't add it, move it to the end of the list\n      if (index > -1) {\n        const item = typeof value[index] === 'object'\n          ? Object.assign({}, value[index])\n          : value[index]\n\n        value.splice(index, 1)\n        value.push(item)\n      } else {\n        value[this.editingIndex] = this.internalSearch\n      }\n\n      this.setValue(value)\n      this.editingIndex = -1\n      this.internalSearch = null\n    },\n    updateCombobox () {\n      // If search is not dirty, do nothing\n      if (!this.searchIsDirty) return\n\n      // The internal search is not matching\n      // the internal value, update the input\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue()\n\n      // Reset search if using slot to avoid a double input\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips\n      if (isUsingSlot) this.internalSearch = null\n    },\n    updateSelf () {\n      this.multiple ? this.updateTags() : this.updateCombobox()\n    },\n    updateTags () {\n      const menuIndex = this.getMenuIndex()\n\n      // If the user is not searching\n      // and no menu item is selected\n      // or if the search is empty\n      // do nothing\n      if ((menuIndex < 0 && !this.searchIsDirty) ||\n          !this.internalSearch) return\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing()\n      }\n\n      const index = this.selectedItems.findIndex(item =>\n        this.internalSearch === this.getText(item))\n\n      // If the duplicate item is an object,\n      // copy it, so that it can be added again later\n      const itemToSelect = index > -1 && typeof this.selectedItems[index] === 'object'\n        ? Object.assign({}, this.selectedItems[index])\n        : this.internalSearch\n\n      // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n      if (index > -1) {\n        const internalValue = this.internalValue.slice()\n        internalValue.splice(index, 1)\n\n        this.setValue(internalValue)\n      }\n\n      // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n      if (menuIndex > -1) return (this.internalSearch = null)\n\n      this.selectItem(itemToSelect)\n\n      this.internalSearch = null\n    },\n    onPaste (event: ClipboardEvent) {\n      if (!this.multiple || this.searchIsDirty) return\n\n      const pastedItemText = event.clipboardData?.getData('text/vnd.vuetify.autocomplete.item+plain')\n      if (pastedItemText && this.findExistingIndex(pastedItemText as any) === -1) {\n        event.preventDefault()\n        VSelect.options.methods.selectItem.call(this, pastedItemText as any)\n      }\n    },\n    clearableCallback () {\n      this.editingIndex = -1\n\n      VAutocomplete.options.methods.clearableCallback.call(this)\n    },\n  },\n})\n"]}]}