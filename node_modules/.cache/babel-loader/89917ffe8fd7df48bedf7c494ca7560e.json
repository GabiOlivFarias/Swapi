{"remainingRequest":"/home/gabi/JERA/outros/Swapi/node_modules/babel-loader/lib/index.js!/home/gabi/JERA/outros/Swapi/node_modules/vuetify/lib/components/VCalendar/modes/stack.js","dependencies":[{"path":"/home/gabi/JERA/outros/Swapi/node_modules/vuetify/lib/components/VCalendar/modes/stack.js","mtime":499162500000},{"path":"/home/gabi/JERA/outros/Swapi/babel.config.js","mtime":1661951552984},{"path":"/home/gabi/JERA/outros/Swapi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/gabi/JERA/outros/Swapi/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["getOverlapGroupHandler","getVisuals","hasOverlap","getNormalizedRange","getTimestampIdentifier","FULL_WIDTH","DEFAULT_OFFSET","WIDTH_MULTIPLIER","stack","events","firstWeekday","overlapThreshold","handler","day","dayEvents","timed","reset","dayStart","visuals","groups","getGroups","group","nodes","visual","child","getNode","index","getNextIndex","parent","getParent","sibling","start","end","addTime","children","push","getOverlappingRange","length","grand","grandNext","calculateBounds","sort","a","b","left","event","startTimestampIdentifier","node","columns","getMaxChildIndex","spaceLeft","spaceWidth","offset","Math","min","columnWidthMultiplier","getColumnWidthMultiplier","columnOffset","columnWidth","width","hasFullWidth","maxColumn","minColumn","reduce","c","getOverlappingIndices","indices","other","i","indexMin","indexMax","returnFirstColumn","overlapping","first","n","filter","added","max","childMax","identifier","minutes","removeMinutes","totalMinutes","addHours","floor","addMinutes"],"sourceRoot":"","sources":["../../../../src/components/VCalendar/modes/stack.ts"],"sourcesContent":["import { CalendarEventOverlapMode, CalendarEventVisual } from 'vuetify/types'\nimport { getOverlapGroupHandler, getVisuals, hasOverlap, getNormalizedRange } from './common'\nimport { getTimestampIdentifier } from '../util/timestamp'\n\ninterface Group {\n  start: number\n  end: number\n  visuals: CalendarEventVisual[]\n}\n\ninterface Node {\n  parent: Node | null\n  sibling: boolean\n  index: number\n  visual: CalendarEventVisual\n  start: number\n  end: number\n  children: Node[]\n}\n\nconst FULL_WIDTH = 100\n\nconst DEFAULT_OFFSET = 5\n\nconst WIDTH_MULTIPLIER = 1.7\n\n/**\n * Variation of column mode where events can be stacked. The priority of this\n * mode is to stack events together taking up the least amount of space while\n * trying to ensure the content of the event is always visible as well as its\n * start and end. A sibling column has intersecting event content and must be\n * placed beside each other. Non-sibling columns are offset by 5% from the\n * previous column. The width is scaled by 1.7 so the events overlap and\n * whitespace is reduced. If there is a hole in columns the event width is\n * scaled up so it intersects with the next column. The columns have equal\n * width in the space they are given. If the event doesn't have any to the\n * right of it that intersect with it's content it's right side is extended\n * to the right side.\n */\n\nexport const stack: CalendarEventOverlapMode = (events, firstWeekday, overlapThreshold) => {\n  const handler = getOverlapGroupHandler(firstWeekday)\n\n  // eslint-disable-next-line max-statements\n  return (day, dayEvents, timed, reset) => {\n    if (!timed) {\n      return handler.getVisuals(day, dayEvents, timed, reset)\n    }\n\n    const dayStart = getTimestampIdentifier(day)\n    const visuals = getVisuals(dayEvents, dayStart)\n    const groups = getGroups(visuals, dayStart)\n\n    for (const group of groups) {\n      const nodes: Node[] = []\n\n      for (const visual of group.visuals) {\n        const child = getNode(visual, dayStart)\n        const index = getNextIndex(child, nodes)\n\n        if (index === false) {\n          const parent = getParent(child, nodes)\n          if (parent) {\n            child.parent = parent\n            child.sibling = hasOverlap(child.start, child.end, parent.start, addTime(parent.start, overlapThreshold))\n            child.index = parent.index + 1\n            parent.children.push(child)\n          }\n        } else {\n          const [parent] = getOverlappingRange(child, nodes, index - 1, index - 1)\n          const children = getOverlappingRange(child, nodes, index + 1, index + nodes.length, true)\n\n          child.children = children\n          child.index = index\n\n          if (parent) {\n            child.parent = parent\n            child.sibling = hasOverlap(child.start, child.end, parent.start, addTime(parent.start, overlapThreshold))\n            parent.children.push(child)\n          }\n\n          for (const grand of children) {\n            if (grand.parent === parent) {\n              grand.parent = child\n            }\n\n            const grandNext = grand.index - child.index <= 1\n            if (grandNext && child.sibling &&\n              hasOverlap(child.start, addTime(child.start, overlapThreshold), grand.start, grand.end)) {\n              grand.sibling = true\n            }\n          }\n        }\n\n        nodes.push(child)\n      }\n\n      calculateBounds(nodes, overlapThreshold)\n    }\n\n    visuals.sort((a, b) => (a.left - b.left) || (a.event.startTimestampIdentifier - b.event.startTimestampIdentifier))\n\n    return visuals\n  }\n}\n\nfunction calculateBounds (nodes: Node[], overlapThreshold: number) {\n  for (const node of nodes) {\n    const { visual, parent } = node\n    const columns = getMaxChildIndex(node) + 1\n    const spaceLeft = parent ? parent.visual.left : 0\n    const spaceWidth = FULL_WIDTH - spaceLeft\n    const offset = Math.min(DEFAULT_OFFSET, FULL_WIDTH / columns)\n    const columnWidthMultiplier = getColumnWidthMultiplier(node, nodes)\n    const columnOffset = spaceWidth / (columns - node.index + 1)\n    const columnWidth = spaceWidth / (columns - node.index + (node.sibling ? 1 : 0)) * columnWidthMultiplier\n\n    if (parent) {\n      visual.left = node.sibling\n        ? spaceLeft + columnOffset\n        : spaceLeft + offset\n    }\n\n    visual.width = hasFullWidth(node, nodes, overlapThreshold)\n      ? FULL_WIDTH - visual.left\n      : Math.min(FULL_WIDTH - visual.left, columnWidth * WIDTH_MULTIPLIER)\n  }\n}\n\nfunction getColumnWidthMultiplier (node: Node, nodes: Node[]): number {\n  if (!node.children.length) {\n    return 1\n  }\n\n  const maxColumn = node.index + nodes.length\n  const minColumn = node.children.reduce((min, c) => Math.min(min, c.index), maxColumn)\n\n  return minColumn - node.index\n}\n\nfunction getOverlappingIndices (node: Node, nodes: Node[]): number[] {\n  const indices: number[] = []\n  for (const other of nodes) {\n    if (hasOverlap(node.start, node.end, other.start, other.end)) {\n      indices.push(other.index)\n    }\n  }\n  return indices\n}\n\nfunction getNextIndex (node: Node, nodes: Node[]): number | false {\n  const indices = getOverlappingIndices(node, nodes)\n  indices.sort()\n\n  for (let i = 0; i < indices.length; i++) {\n    if (i < indices[i]) {\n      return i\n    }\n  }\n  return false\n}\n\nfunction getOverlappingRange (node: Node, nodes: Node[], indexMin: number, indexMax: number, returnFirstColumn = false): Node[] {\n  const overlapping: Node[] = []\n  for (const other of nodes) {\n    if (other.index >= indexMin && other.index <= indexMax && hasOverlap(node.start, node.end, other.start, other.end)) {\n      overlapping.push(other)\n    }\n  }\n  if (returnFirstColumn && overlapping.length > 0) {\n    const first = overlapping.reduce((min, n) => Math.min(min, n.index), overlapping[0].index)\n    return overlapping.filter(n => n.index === first)\n  }\n  return overlapping\n}\n\nfunction getParent (node: Node, nodes: Node[]): Node | null {\n  let parent: Node | null = null\n  for (const other of nodes) {\n    if (hasOverlap(node.start, node.end, other.start, other.end) && (parent === null || other.index > parent.index)) {\n      parent = other\n    }\n  }\n  return parent\n}\n\nfunction hasFullWidth (node: Node, nodes: Node[], overlapThreshold: number): boolean {\n  for (const other of nodes) {\n    if (other !== node &&\n      other.index > node.index &&\n      hasOverlap(node.start, addTime(node.start, overlapThreshold), other.start, other.end)) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfunction getGroups (visuals: CalendarEventVisual[], dayStart: number): Group[] {\n  const groups: Group[] = []\n\n  for (const visual of visuals) {\n    const [start, end] = getNormalizedRange(visual.event, dayStart)\n    let added = false\n\n    for (const group of groups) {\n      if (hasOverlap(start, end, group.start, group.end)) {\n        group.visuals.push(visual)\n        group.end = Math.max(group.end, end)\n        added = true\n        break\n      }\n    }\n\n    if (!added) {\n      groups.push({ start, end, visuals: [visual] })\n    }\n  }\n\n  return groups\n}\n\nfunction getNode (visual: CalendarEventVisual, dayStart: number): Node {\n  const [start, end] = getNormalizedRange(visual.event, dayStart)\n\n  return {\n    parent: null,\n    sibling: true,\n    index: 0,\n    visual,\n    start,\n    end,\n    children: [],\n  }\n}\n\nfunction getMaxChildIndex (node: Node): number {\n  let max = node.index\n  for (const child of node.children) {\n    const childMax = getMaxChildIndex(child)\n    if (childMax > max) {\n      max = childMax\n    }\n  }\n  return max\n}\n\nfunction addTime (identifier: number, minutes: number): number {\n  const removeMinutes = identifier % 100\n  const totalMinutes = removeMinutes + minutes\n  const addHours = Math.floor(totalMinutes / 60)\n  const addMinutes = totalMinutes % 60\n\n  return identifier - removeMinutes + addHours * 100 + addMinutes\n}\n"]}]}